{"version":3,"sources":["components/header.jsx","components/slider.jsx","components/movie.jsx","components/movies.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_this$props","this","props","watchlist","favourites","react_default","a","createElement","reactstrap_es","className","color","dark","expand","navbar","style","width","href","marginLeft","marginRight","length","Component","Slider","xs","Movie","state","movie","watchlisttext","favourite","addToWatchList","console","log","_this","setState","_this2","fetch","imdbID","then","response","json","responseJSON","classes","_this3","_this$state$movie","Runtime","Released","Director","Plot","Actors","xl","lg","height","fontSize","src","Poster","data-holder-rendered","Title","onClick","onAddToWatchlist","type","getWatchlistClass","onAddToFavourites","Movies","movies","map","movie_Movie","key","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","push","addToFavourites","nowshowing","API","data","Search","_this$state","Fragment","header","slider_Slider","movies_Movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.604334df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar, Container, NavbarBrand, NavItem, NavLink} from 'reactstrap';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n\r\n        const { watchlist, favourites } = this.props;        \r\n\r\n        return(\r\n            // <div className=\"navbar navbar-dark bg-dark shadow-sm\">\r\n            //     <div className=\"container d-flex justify-content-between\">\r\n            //         <a href=\"#\" className=\"navbar-brand d-flex align-items-center\">\r\n            //             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"mr-2\"><path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle></svg>\r\n            //             <strong>Album</strong>\r\n            //         </a>\r\n            //         <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarHeader\" aria-controls=\"navbarHeader\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            //             <span className=\"navbar-toggler-icon\"></span>\r\n            //         </button>\r\n            //     </div>\r\n            // </div>\r\n\r\n            <Navbar className=\"fixed-top\" color=\"dark\" dark expand=\"md\">\r\n                <Container>\r\n                    <Nav navbar style={{width: \"100%\"}}>\r\n                    <NavbarBrand href=\"/\">ramroseat</NavbarBrand>     \r\n                    <NavItem style={{ marginLeft: \"auto\", marginRight: \"15px\"}}>\r\n                        <NavLink href=\"#\" style={{color: \"white\"}}>Now Showing</NavLink>\r\n                    </NavItem>\r\n                        <NavItem style={{ marginRight: \"15px\"}}>\r\n                            <NavLink href=\"#\" style={{ color: \"white\" }}>Watchlist<span style={{ marginLeft: \"5px\"}} className=\"badge badge-primary\">{watchlist.length}</span></NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                            <NavLink href=\"#\" style={{ color: \"white\" }}>Favourites<span style={{ marginLeft: \"5px\" }} className=\"badge badge-primary\">{favourites.length}</span></NavLink>\r\n                    </NavItem>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nexport default class Slider extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n          <Row>\r\n              <Col xs=\"12\">\r\n                slider comes from here        \r\n              </Col>\r\n          </Row>\r\n      </Container>            \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap';\r\n\r\nconst API = 'https://www.omdbapi.com/?apikey=fcdfe84d&i=';\r\n\r\nexport default class Movie extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     movie: [],\r\n  //   };\r\n  // }\r\n\r\n\r\n  state = {\r\n    movie: [],\r\n    watchlist: false,\r\n    watchlisttext: \"+ Add\",\r\n    favourite: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n    fetch(API + this.props.movie.imdbID)\r\n      .then(response => response.json())\r\n      .then((responseJSON) => {\r\n        // do stuff with responseJSON here...        \r\n        this.setState({ movie: responseJSON }) \r\n      });\r\n      // .then(data => this.setState({ movie: data }));\r\n    \r\n  }  \r\n\r\n  addToWatchList = () => {\r\n    let watchlist = true;\r\n    let watchlisttext = \"Addded\";\r\n    console.log(this.state.watchlist);\r\n    this.setState({ watchlist: watchlist, watchlisttext: watchlisttext });\r\n    console.log(this.state.watchlist);\r\n  }\r\n\r\n  getWatchlistClass(){\r\n    let classes=\"btn btn-sm \";    \r\n    classes += (this.state.watchlist? \"btn\" : \"btn-primary\");\r\n    return classes;\r\n  }\r\n\r\n  render() {        \r\n\r\n    const { Runtime, Released, Plot, Director, Actors } = this.state.movie;        \r\n    \r\n    return (\r\n      <Col xl=\"4\" lg=\"6\" className=\"mb-4\">\r\n            <div className=\"card shadow-sm movie-card\" style={{height: \"100%\"}}>\r\n                \r\n                    <div className=\"card-body d-flex\" style={{ fontSize: \"14px\"}}>\r\n                    <div>\r\n                      <img className=\"card-img-top\" src={this.props.movie.Poster} data-holder-rendered=\"true\"/>                        \r\n                    </div>\r\n                    <div className=\"movie-content\">\r\n                        <h5 className=\"movie-name\">{this.props.movie.Title}</h5>\r\n                        <span className=\"text-muted\">Runtime: {Runtime}</span> <br/>\r\n                        <span className=\"text-muted\">Release Date: {Released}</span>\r\n                        <div>Director: {Director}</div>\r\n                        <div>Cast: <br/>{Actors}</div>                  \r\n                        {/* <div className=\"plot\">\r\n                        { Plot }\r\n                        </div> */}\r\n                        <div className=\"d-flex justify-content-between align-items-center\">     \r\n\r\n                          <button onClick={() => { this.props.onAddToWatchlist(this.props.movie.imdbID); this.addToWatchList();}} type=\"button\" className={this.getWatchlistClass()}>{this.state.watchlisttext} to Watchlist</button>                            \r\n                          <button onClick={() => this.props.onAddToFavourites(this.props.movie.imdbID)} type=\"button\" className=\"btn btn-sm btn-outline-secondary float=right\"><i style={{color: \"red\"}} className=\"fa fa-heart\"></i></button>                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      </Col> \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Movie from './movie';\r\nimport { Row} from 'reactstrap';\r\n\r\nexport default class Movies extends Component {\r\n  \r\n\r\n  render() {\r\n\r\n        const { movies, onAddToWatchlist, onAddToFavourites } = this.props;            \r\n    \r\n    return (            \r\n          <Row>\r\n            \r\n                {movies.map(movie =>\r\n                      <Movie key=\"movie.imdbID\" onAddToWatchlist={onAddToWatchlist} onAddToFavourites={onAddToFavourites} movie={movie}></Movie>                       \r\n                )}\r\n                             \r\n          </Row>      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/header';\r\nimport Slider from './components/slider';\r\nimport Movies from './components/movies';\r\n\r\nconst API = 'https://www.omdbapi.com/?i=tt3896198&apikey=fcdfe84d';\r\n\r\nlet DEFAULT_QUERY = '&s=the+rock&type=movie';\r\n\r\nclass App extends Component {  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movies: [],   \r\n      nowshowing: [],   \r\n      watchlist: [], \r\n      favourites: []     \r\n    };\r\n  }\r\n\r\n  componentDidMount() {        \r\n    fetch(API + DEFAULT_QUERY)\r\n      .then(response => response.json())      \r\n      .then(data => this.setState({ movies: data.Search}));\r\n  }\r\n\r\n  // state = {\r\n  //   movies:[\r\n  //     { \r\n  //       id: 1, name: \"Bohemian Rhapsody\", director: 'Byan Singer', stars: [\"Rami Malek\", \"Lucy Boynton\", \"Gwilym Lee\"], imdbRating: \"8.4\", releaseDate: \"2 November 2018\", runtime: \"2h 14min\" \r\n  //     },\r\n  //     {\r\n  //       id: 2, name: \"Dunkirk\", director: 'Christopher Nolan', stars: [\"Fionn Whitehead\", \"Barry Keoghan\", \"Mark Rylance\"], imdbRating: \"7.9\", releaseDate: \"21 July 2017\", runtime: \"1hr 46min\" \r\n  //     },\r\n  //     {\r\n  //       id: 3, name: \"The Hitman's Bodyguard\", director: 'Patrick Hughes', stars: [\"Ryan Reynolds\", \"Samuel L. Jackson\", \"Gary Oldman\"], imdbRating: \"6.9\", releaseDate: \"18 August 2017\", runtime: \"1hr 58min\"\r\n  //     },\r\n  //     {\r\n  //       id: 4, name: \"The Nun\", director: 'Corin Handy', stars: [\"Demián Bichir\", \"Taissa Farmiga\", \"Jonas Bloquet\"], imdbRating: \"5.6\", releaseDate: \"7 September 2018\", runtime: \"96min\"\r\n  //     },      \r\n  //   ]    \r\n  // }\r\n\r\n  \r\n  \r\n  addToWatchList = imdbID =>{\r\n      // console.log('add  ' + imdbID + ' to watchlist');          \r\n      const watchlist = this.state.watchlist;\r\n      if (!watchlist.includes(imdbID)){\r\n          watchlist.push(imdbID);            \r\n      }      \r\n      \r\n      this.setState({ watchlist });      \r\n  }\r\n\r\n  addToFavourites = imdbID => {\r\n    const favourites = this.state.favourites;\r\n    if (!favourites.includes(imdbID)){\r\n        favourites.push(imdbID);\r\n    }\r\n\r\n    this.setState({favourites});\r\n  }\r\n\r\n  render() {\r\n\r\n    const { movies, watchlist, favourites} = this.state;    \r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Header watchlist={watchlist} favourites={favourites}></Header>\r\n        <Slider></Slider>\r\n        <div className=\"album py-5 bg-light\">\r\n        <main className=\"container\">\r\n          <Movies onAddToWatchlist={this.addToWatchList} onAddToFavourites={this.addToFavourites} movies={movies}></Movies>\r\n        </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}